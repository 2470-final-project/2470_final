package edu.pitt.isd.model.mapper;

import edu.pitt.isd.model.dto.Course;
import edu.pitt.isd.model.dto.CourseExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface CourseMapper {

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @SelectProvider(type = CourseSqlProvider.class, method = "countByExample")
    long countByExample(CourseExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @DeleteProvider(type = CourseSqlProvider.class, method = "deleteByExample")
    int deleteByExample(CourseExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @Delete({ "delete from course", "where id = #{id,jdbcType=INTEGER}" })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @Insert({ "insert into course (subject, number, ", "year, semester, dept_id, ", "instructor_id, name)",
            "values (#{subject,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, ",
            "#{year,jdbcType=DATE}, #{semester,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, ",
            "#{instructorId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})" })
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    int insert(Course record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @InsertProvider(type = CourseSqlProvider.class, method = "insertSelective")
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    int insertSelective(Course record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @SelectProvider(type = CourseSqlProvider.class, method = "selectByExample")
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "subject", property = "subject", jdbcType = JdbcType.VARCHAR),
            @Result(column = "number", property = "number", jdbcType = JdbcType.VARCHAR),
            @Result(column = "year", property = "year", jdbcType = JdbcType.DATE),
            @Result(column = "semester", property = "semester", jdbcType = JdbcType.VARCHAR),
            @Result(column = "dept_id", property = "deptId", jdbcType = JdbcType.INTEGER),
            @Result(column = "instructor_id", property = "instructorId", jdbcType = JdbcType.INTEGER),
            @Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR) })
    List<Course> selectByExampleWithRowbounds(CourseExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @SelectProvider(type = CourseSqlProvider.class, method = "selectByExample")
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "subject", property = "subject", jdbcType = JdbcType.VARCHAR),
            @Result(column = "number", property = "number", jdbcType = JdbcType.VARCHAR),
            @Result(column = "year", property = "year", jdbcType = JdbcType.DATE),
            @Result(column = "semester", property = "semester", jdbcType = JdbcType.VARCHAR),
            @Result(column = "dept_id", property = "deptId", jdbcType = JdbcType.INTEGER),
            @Result(column = "instructor_id", property = "instructorId", jdbcType = JdbcType.INTEGER),
            @Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR) })
    List<Course> selectByExample(CourseExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @Select({ "select", "id, subject, number, year, semester, dept_id, instructor_id, name", "from course",
            "where id = #{id,jdbcType=INTEGER}" })
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "subject", property = "subject", jdbcType = JdbcType.VARCHAR),
            @Result(column = "number", property = "number", jdbcType = JdbcType.VARCHAR),
            @Result(column = "year", property = "year", jdbcType = JdbcType.DATE),
            @Result(column = "semester", property = "semester", jdbcType = JdbcType.VARCHAR),
            @Result(column = "dept_id", property = "deptId", jdbcType = JdbcType.INTEGER),
            @Result(column = "instructor_id", property = "instructorId", jdbcType = JdbcType.INTEGER),
            @Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR) })
    Course selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @UpdateProvider(type = CourseSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Course record, @Param("example") CourseExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @UpdateProvider(type = CourseSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") Course record, @Param("example") CourseExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @UpdateProvider(type = CourseSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Course record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table course
     * @mbg.generated
     */
    @Update({ "update course", "set subject = #{subject,jdbcType=VARCHAR},", "number = #{number,jdbcType=VARCHAR},",
            "year = #{year,jdbcType=DATE},", "semester = #{semester,jdbcType=VARCHAR},",
            "dept_id = #{deptId,jdbcType=INTEGER},", "instructor_id = #{instructorId,jdbcType=INTEGER},",
            "name = #{name,jdbcType=VARCHAR}", "where id = #{id,jdbcType=INTEGER}" })
    int updateByPrimaryKey(Course record);
}