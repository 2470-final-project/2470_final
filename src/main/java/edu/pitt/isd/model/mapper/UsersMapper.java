package edu.pitt.isd.model.mapper;

import edu.pitt.isd.model.dto.Users;
import edu.pitt.isd.model.dto.UsersExample;
import java.util.List;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface UsersMapper {

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @SelectProvider(type = UsersSqlProvider.class, method = "countByExample")
    long countByExample(UsersExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @DeleteProvider(type = UsersSqlProvider.class, method = "deleteByExample")
    int deleteByExample(UsersExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    @Insert({ "insert into users (USER, CURRENT_CONNECTIONS, ", "TOTAL_CONNECTIONS)",
            "values (#{user,jdbcType=CHAR}, #{currentConnections,jdbcType=BIGINT}, ", "#{totalConnections,jdbcType=BIGINT})" })
    int insert(Users record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    @InsertProvider(type = UsersSqlProvider.class, method = "insertSelective")
    int insertSelective(Users record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @SelectProvider(type = UsersSqlProvider.class, method = "selectByExample")
    @Results({ @Result(column = "USER", property = "user", jdbcType = JdbcType.CHAR),
            @Result(column = "CURRENT_CONNECTIONS", property = "currentConnections", jdbcType = JdbcType.BIGINT),
            @Result(column = "TOTAL_CONNECTIONS", property = "totalConnections", jdbcType = JdbcType.BIGINT) })
    List<Users> selectByExampleWithRowbounds(UsersExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @SelectProvider(type = UsersSqlProvider.class, method = "selectByExample")
    @Results({ @Result(column = "USER", property = "user", jdbcType = JdbcType.CHAR),
            @Result(column = "CURRENT_CONNECTIONS", property = "currentConnections", jdbcType = JdbcType.BIGINT),
            @Result(column = "TOTAL_CONNECTIONS", property = "totalConnections", jdbcType = JdbcType.BIGINT) })
    List<Users> selectByExample(UsersExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @UpdateProvider(type = UsersSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Users record, @Param("example") UsersExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table users
     * @mbg.generated
     */
    @UpdateProvider(type = UsersSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") Users record, @Param("example") UsersExample example);
}