package edu.pitt.isd.model.mapper;

import edu.pitt.isd.model.dto.QuestionOption;
import edu.pitt.isd.model.dto.QuestionOptionExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface QuestionOptionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @SelectProvider(type=QuestionOptionSqlProvider.class, method="countByExample")
    long countByExample(QuestionOptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @DeleteProvider(type=QuestionOptionSqlProvider.class, method="deleteByExample")
    int deleteByExample(QuestionOptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @Delete({
        "delete from question_option",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @Insert({
        "insert into question_option (question_id, option_number, ",
        "option)",
        "values (#{questionId,jdbcType=INTEGER}, #{optionNumber,jdbcType=INTEGER}, ",
        "#{option,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(QuestionOption record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @InsertProvider(type=QuestionOptionSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(QuestionOption record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @SelectProvider(type=QuestionOptionSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="question_id", property="questionId", jdbcType=JdbcType.INTEGER),
        @Result(column="option_number", property="optionNumber", jdbcType=JdbcType.INTEGER),
        @Result(column="option", property="option", jdbcType=JdbcType.VARCHAR)
    })
    List<QuestionOption> selectByExampleWithRowbounds(QuestionOptionExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @SelectProvider(type=QuestionOptionSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="question_id", property="questionId", jdbcType=JdbcType.INTEGER),
        @Result(column="option_number", property="optionNumber", jdbcType=JdbcType.INTEGER),
        @Result(column="option", property="option", jdbcType=JdbcType.VARCHAR)
    })
    List<QuestionOption> selectByExample(QuestionOptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, question_id, option_number, option",
        "from question_option",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="question_id", property="questionId", jdbcType=JdbcType.INTEGER),
        @Result(column="option_number", property="optionNumber", jdbcType=JdbcType.INTEGER),
        @Result(column="option", property="option", jdbcType=JdbcType.VARCHAR)
    })
    QuestionOption selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @UpdateProvider(type=QuestionOptionSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") QuestionOption record, @Param("example") QuestionOptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @UpdateProvider(type=QuestionOptionSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") QuestionOption record, @Param("example") QuestionOptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @UpdateProvider(type=QuestionOptionSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(QuestionOption record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_option
     *
     * @mbg.generated
     */
    @Update({
        "update question_option",
        "set question_id = #{questionId,jdbcType=INTEGER},",
          "option_number = #{optionNumber,jdbcType=INTEGER},",
          "option = #{option,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(QuestionOption record);
}